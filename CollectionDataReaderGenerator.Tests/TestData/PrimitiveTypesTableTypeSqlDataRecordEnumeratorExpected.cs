// <auto-generated/>

using System.Collections.Generic;
using System.Data;
using Microsoft.Data.SqlClient.Server;

namespace CollectionDataReaderGenerator.Tests.TestData
{
    public class PrimitiveTypesTableTypeSqlRecordEnumerator
    {
        private readonly IEnumerator<PrimitiveTypesTableType> _source;

        public PrimitiveTypesTableTypeSqlRecordEnumerator(IEnumerable<PrimitiveTypesTableType> source)
        {
            _source = source.GetEnumerator();
        }

        public IEnumerator<SqlDataRecord> GetEnumerator()
        {
            var record = new SqlDataRecord
            (
                new SqlMetaData("Qwerty", SqlDbType.UniqueIdentifier),
                new SqlMetaData("BooleanColumn", SqlDbType.Bit),
                new SqlMetaData("StringColumn", SqlDbType.NVarChar, 20),
                new SqlMetaData("StringColumn2", SqlDbType.VarChar, 10),
                new SqlMetaData("DecimalColumn", SqlDbType.Decimal, 18, 5),
                new SqlMetaData("DoubleColumn", SqlDbType.Float),
                new SqlMetaData("FloatColumn", SqlDbType.Real),
                new SqlMetaData("IntColumn", SqlDbType.Int),
                new SqlMetaData("LongColumn", SqlDbType.BigInt),
                new SqlMetaData("ShortColumn", SqlDbType.SmallInt),
                new SqlMetaData("DateTimeColumn", SqlDbType.DateTime2)
            );

            while (_source.MoveNext())
            {
                var current = _source.Current;
                record.SetGuid(0, current.Qwerty);
                record.SetBoolean(1, current.BooleanColumn);
                record.SetString(2, current.StringColumn);
                record.SetString(3, current.StringColumn2);
                record.SetDecimal(4, current.DecimalColumn);
                record.SetDouble(5, current.DoubleColumn);
                record.SetFloat(6, current.FloatColumn);
                record.SetInt32(7, current.IntColumn);
                record.SetInt64(8, current.LongColumn);
                record.SetInt16(9, current.ShortColumn);
                record.SetDateTime(10, current.DateTimeColumn);
                yield return record;
            }

            _source.Reset();
        }
    }
}