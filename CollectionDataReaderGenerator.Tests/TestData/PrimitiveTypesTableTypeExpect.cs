// <auto-generated/>
using System.Collections.Generic;

namespace CollectionDataReaderGenerator.Tests.TestData
{
    public partial struct PrimitiveTypesTableType
    {
        public static PrimitiveTypesTableTypeDataReader CreateDataReader(IEnumerable<PrimitiveTypesTableType> source)
        {
            return new PrimitiveTypesTableTypeDataReader(source);
        }

        public static PrimitiveTypesTableTypeSqlDataRecordIterator CreateSqlDataRecordIterator(IEnumerable<PrimitiveTypesTableType> source)
        {
            return new PrimitiveTypesTableTypeSqlDataRecordIterator(source);
        }

        public const string CreateTableTypeSqlText = @"
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'Test')
BEGIN
    EXEC('CREATE SCHEMA Test');
END;

IF EXISTS (
    SELECT * FROM sys.types
    WHERE is_table_type = 1
    AND name = N'Test_Type'
    AND schema_id = SCHEMA_ID(N'Test')
)
BEGIN
    DECLARE @sql NVARCHAR(MAX) = N'DROP TYPE Test.Test_Type;';
    EXEC sp_executesql @sql;
END;

CREATE TYPE Test.Test_Type AS TABLE
(
    Qwerty uniqueidentifier,
    BooleanColumn bit,
    StringColumn nvarchar(max),
    StringColumn2 varchar(10),
    StringColumn3 nvarchar(20),
    DecimalColumn decimal(18, 5),
    DoubleColumn float,
    FloatColumn real,
    IntColumn int,
    LongColumn bigint,
    ShortColumn smallint,
    DateTimeColumn datetime2
);
";

        public const string TableTypeName = "Test.Test_Type";

        public const string TempTableName = "#Test_Type";

        public const string CreateTempTableSqlText = @"
CREATE TABLE #Test_Type (
    Qwerty uniqueidentifier,
    BooleanColumn bit,
    StringColumn nvarchar(max),
    StringColumn2 varchar(10),
    StringColumn3 nvarchar(20),
    DecimalColumn decimal(18, 5),
    DoubleColumn float,
    FloatColumn real,
    IntColumn int,
    LongColumn bigint,
    ShortColumn smallint,
    DateTimeColumn datetime2
);
";
    }
}